<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="GearAxis" Id="{ad1ed5a7-56ef-405a-8da4-ee821b902e30}" SpecialFunc="None">
    <Declaration><![CDATA[/// This function block is a container for all axis objects that are used by this unit.
/// The parent of all objects can be directly transfered in their constructor (this is only relevant for equipment objects
/// that have to be managed (e.g. [DebouncedInput](xref:ZEquipment.DebouncedInput), [Light](xref:ZEquipment.Light), ...).
FUNCTION_BLOCK GearAxis EXTENDS GearContainer
VAR
  {attribute 'hide'}
  _axisbridge : ZApplication.AxisBridge(_parent);
END_VAR
VAR_INPUT

{region "PositionX : AxisPlcOpenMc"}
  PositionX : ZEquipment.AxisSimulated(_parent);
  {attribute 'ZId' := 'fbe544fd-32f7-4a35-b34a-168d60744a34'}
{endregion}

{region "RotationC : AxisPlcOpenMc"}
  RotationC : ZEquipment.AxisSimulated(_parent);
  {attribute 'ZId' := '01f1af52-e172-4e11-895e-2a66564d7b35'}
{endregion}

{attribute '__ZwPlcUnitEquipmentDeclaration__'} // Do not remove this attribute! It is used for code generation.
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF _isInitialized
THEN
  RETURN;
END_IF

  _axisbridge.SetLogger(_parent._logger);

{region "PositionX : AxisPlcOpenMc"}
  PositionX.SetLogger(_parent._logger);
  PositionX.SetName(name:='PositionX');
  PositionX.SetSimulation(_parent._data.Config.Simulated);
  _axisbridge.WithHoming(PositionX)
     .WithMovePosition(PositionX)
     .WithMoveVelocity(PositionX)
     .WithHalt(PositionX)
     .WithVelocityFeedrate(PositionX)
     .WithFeedbackPosition(PositionX)
     .WithFeedbackVelocity(PositionX)
     .WithFeedbackCurrent(PositionX)
     .AddAxis (axis:=PositionX, publish:=_parent._com.Publish.Equipment.PositionX, subscribe:=_parent._com.Subscribe.Equipment.PositionX);

  {region "UserInitCode"}
  // put your individual init code for this Axis here
  {endregion}

  {attribute 'ZId' := 'fbe544fd-32f7-4a35-b34a-168d60744a34'}
{endregion}

{region "RotationC : AxisPlcOpenMc"}
  RotationC.SetLogger(_parent._logger);
  RotationC.SetName(name:='RotationC');
  RotationC.SetSimulation(_parent._data.Config.Simulated);
  _axisbridge.WithHoming(RotationC)
     .WithMovePosition(RotationC)
     .WithMoveVelocity(RotationC)
     .WithHalt(RotationC)
     .WithVelocityFeedrate(RotationC)
     .WithFeedbackPosition(RotationC)
     .WithFeedbackVelocity(RotationC)
     .WithFeedbackCurrent(RotationC)
     .AddAxis (axis:=RotationC, publish:=_parent._com.Publish.Equipment.RotationC, subscribe:=_parent._com.Subscribe.Equipment.RotationC);	   
			
  {region "UserInitCode"}
  // put your individual init code for this Axis here
  {endregion}

  {attribute 'ZId' := '01f1af52-e172-4e11-895e-2a66564d7b35'}
{endregion}

{attribute '__ZwPlcUnitEquipmentImplementation__'} // Do not remove this attribute! It is used for code generation.

_isInitialized := TRUE;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>