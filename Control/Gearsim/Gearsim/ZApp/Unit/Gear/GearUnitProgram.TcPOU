<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="GearUnitProgram" Id="{545b2d15-245a-404e-a282-68f62509b4bc}" SpecialFunc="None">
    <Declaration><![CDATA[/// each unit can run in its own PROGRAM and Task, respectively. However, this is optional and one may also
/// instantiate the unit in the ModuleProgram.
/// In order to keep initialization to a minimum, all ModuleContext objects that are required by the Unit are
/// given as FB_init parameter. These objects are
/// * data structs
/// * communication structs
/// * busmaster(s)
/// A unit should always be a root object (no parent) if it is running in its own context. If it runs in the same
/// task as the Module the parent may be set to the Module's Application.
PROGRAM GearUnitProgram
VAR
{region "PrimaryGear"}
{undefine RunInSeparateProgram}
{IF NOT (defined (PrimaryGear_disabled)) AND (defined (RunInSeparateProgram))}
  PrimaryGear : GearUnit(name := 'PrimaryGear', // name of the unit (for logging)
					  parent := 0, // caller of the Unit's cyclic method. If the Unit runs in its own context use 0
						configdata := ZGlobal.Data.Config.PrimaryGear,
						machinedata := ZGlobal.Data.Machine.PrimaryGear,
						calibrationdata := ZGlobal.Data.Calibration.PrimaryGear,
						com := ZGlobal.Com.Unit.PrimaryGear);
  {attribute 'section' := '__ZwPlcUnitProgramDeclaration__'}
  {attribute 'ZId' := 'd1deea68-6f8b-4ea5-9916-7be69dc951fa'}
{END_IF}
{endregion}
{region "SimpleGear"}
{undefine RunInSeparateProgram}
{IF NOT (defined (SimpleGear_disabled)) AND (defined (RunInSeparateProgram))}
  SimpleGear : GearUnit(name := 'SimpleGear', // name of the unit (for logging)
					  parent := 0, // caller of the Unit's cyclic method. If the Unit runs in its own context use 0
						configdata := ZGlobal.Data.Config.SimpleGear,
						machinedata := ZGlobal.Data.Machine.SimpleGear,
						calibrationdata := ZGlobal.Data.Calibration.SimpleGear,
						com := ZGlobal.Com.Unit.SimpleGear);
  {attribute 'section' := '__ZwPlcUnitProgramDeclaration__'}
  {attribute 'ZId' := '215d1db4-d61a-4f46-91b5-612373b86c91'}
{END_IF}
{endregion}
{region "StruckigGear"}
{undefine RunInSeparateProgram}
{IF NOT (defined (StruckigGear_disabled)) AND (defined (RunInSeparateProgram))}
  StruckigGear : GearUnit(name := 'StruckigGear', // name of the unit (for logging)
					  parent := 0, // caller of the Unit's cyclic method. If the Unit runs in its own context use 0
						configdata := ZGlobal.Data.Config.StruckigGear,
						machinedata := ZGlobal.Data.Machine.StruckigGear,
						calibrationdata := ZGlobal.Data.Calibration.StruckigGear,
						com := ZGlobal.Com.Unit.StruckigGear);
  {attribute 'section' := '__ZwPlcUnitProgramDeclaration__'}
  {attribute 'ZId' := 'd827270e-999f-436d-80d5-b12442f5d1cf'}
{END_IF}
{endregion}
{attribute '__ZwPlcUnitProgramDeclaration__'} // Do not remove this attribute! It is used for code generation.
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// run the unit - the cylics of all children will be called as well

{region "PrimaryGear"}
{undefine RunInSeparateProgram}
{IF NOT (defined (PrimaryGear_disabled)) AND (defined (RunInSeparateProgram))}
  PrimaryGear.Cyclic();
  {attribute 'section' := '__ZwPlcUnitProgramImplementation__'}
  {attribute 'ZId' := 'd1deea68-6f8b-4ea5-9916-7be69dc951fa'}
{END_IF}
{endregion}
{region "SimpleGear"}
{undefine RunInSeparateProgram}
{IF NOT (defined (SimpleGear_disabled)) AND (defined (RunInSeparateProgram))}
  SimpleGear.Cyclic();
  {attribute 'section' := '__ZwPlcUnitProgramImplementation__'}
  {attribute 'ZId' := '215d1db4-d61a-4f46-91b5-612373b86c91'}
{END_IF}
{endregion}
{region "StruckigGear"}
{undefine RunInSeparateProgram}
{IF NOT (defined (StruckigGear_disabled)) AND (defined (RunInSeparateProgram))}
  StruckigGear.Cyclic();
  {attribute 'section' := '__ZwPlcUnitProgramImplementation__'}
  {attribute 'ZId' := 'd827270e-999f-436d-80d5-b12442f5d1cf'}
{END_IF}
{endregion}
{attribute '__ZwPlcUnitProgramImplementation__'} // Do not remove this attribute! It is used for code generation.
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>